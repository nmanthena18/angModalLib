{"version":3,"file":"modal.service.js","sourceRoot":"","sources":["modal.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class ModalService {\r\n  private modals: any[] = [];\r\n  constructor() { }\r\n\r\n  add(modal: any) {\r\n    // add modal to array of active modals\r\n    this.modals.push(modal);\r\n  }\r\n  remove(id: string) {\r\n    // remove modal from array of active modals\r\n    let modalToRemove = this.modals.indexOf(id);\r\n    this.modals = this.modals.splice(modalToRemove, 1);\r\n}\r\n\r\nopen(id: string) {\r\n    var modal \r\n    this.modals.forEach( (item)=>{\r\n        if(item.id == id) modal =  item;\r\n    });\r\n    modal.ele.nativeElement.style.visibility = 'visible';\r\n    var w = window,\r\n    d = document,\r\n    e = d.documentElement,\r\n    g = d.getElementsByTagName('body')[0],\r\n    x = w.innerWidth || e.clientWidth || g.clientWidth,\r\n    y = w.innerHeight|| e.clientHeight|| g.clientHeight;\r\n    let modalContainer = modal.ele.nativeElement.getElementsByClassName('modal')[0];\r\n    let modalHeight = y - modalContainer.clientHeight;\r\n    modalContainer.style.top = modalHeight/2+'px';\r\n    this.addRemoveCls(modalContainer, 'modal-open', 'modal-close');\r\n}\r\n\r\nclose(id: string) {\r\n    var modal \r\n    this.modals.forEach( (item)=>{\r\n        if(item.id == id) modal =  item;\r\n    });\r\n    let modalContainer = modal.ele.nativeElement.getElementsByClassName('modal')[0];\r\n    this.addRemoveCls(modalContainer, 'modal-close', 'modal-open');     \r\n    setTimeout( ()=>{\r\n        modal.ele.nativeElement.style.visibility = 'hidden';\r\n    }, 200);\r\n}\r\n\r\nprivate addRemoveCls(modal, add, remove){\r\n    var classes = modal.getAttribute('class').split(\" \");\r\n    let isOpen = classes.indexOf(add);\r\n    isOpen < 0 ? classes.push(add): '';\r\n    let index = classes.indexOf(remove);\r\n    index > -1 ? classes.splice(index, 1) : '';\r\n    console.log(classes)\r\n    modal.className = classes.join().replace(',', ' ');\r\n}\r\n\r\n}\r\n"]}